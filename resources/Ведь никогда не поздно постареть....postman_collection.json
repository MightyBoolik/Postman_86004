{
	"info": {
		"_postman_id": "35477337-d589-4dcb-bf3f-f886f88c7462",
		"name": "Ведь никогда не поздно постареть...",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10292547"
	},
	"item": [
		{
			"name": "Мы молоды до мозга, костейййаа",
			"item": [
				{
					"name": "время время время",
					"item": [
						{
							"name": "01. До создания",
							"item": [
								{
									"name": "Поиск: пользователя (ssoid)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"ssoid\", jsonData.data.items.first());",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n    \"condition\": {\n      \"email\": \"{{email}}\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{portal}}/user/find",
											"host": [
												"{{portal}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск пользователя в ПОС (id_user) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id_user\", jsonData.data.items.first());",
													"",
													"// вывод параметров в консоль",
													"console.log(\"id_user = \" + pm.environment.get(\"id_user\"));"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n    \"condition\": {\n      \"ssoid\": \"{{ssoid}}\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение пользователя в ПОС (id_block) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"id_block\", jsonData.data.first().blocks);",
													"if(pm.environment.get(\"id_block\").length)",
													"{",
													"pm.environment.set(\"id_block\", jsonData.data.first().blocks.first().id);",
													"console.log(\"user blocked\");",
													"}",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n             {{id_user}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Удаление блокировки Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ids\": [\n             {{id_block}}\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/block/delete",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"block",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\",\n \"files.ssoid\",\n                \"{{ssoid}}\"\n            ],\n            [\n                \"<=\", \"files.created_at\",       \n  \"{{files_created_1}}\"\n            ],\n            [\n                \">=\", \"files.created_at\",\n                \"{{files_created_2}}\"\n            ]\n        ]\n  },\n        \"limit\": 5\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "02. 1016 Поврежденные | неправильно установленные дорожные знаки",
							"item": [
								{
									"name": "1016 Поврежденные | неправильно установленные дорожные знаки",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"theme_name\", jsonData.data.first().title);",
													"",
													"// вывод параметров в консоль",
													"console.log(\"theme_name = \" + pm.environment.get(\"theme_name\"));",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"theme_id\", 1016);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n        {{theme_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/theme/get?clear_cache=",
											"host": [
												"{{pos}}"
											],
											"path": [
												"theme",
												"get"
											],
											"query": [
												{
													"key": "clear_cache",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1016. Поиск объекта. category 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"var object_id = jsonData.data.items[Math.floor(Math.random()*jsonData.data.items.length)];",
													"pm.environment.set(\"object_id\", object_id);",
													"",
													"pm.test(\"Объект найден\", function () {",
													"    pm.expect(object_id).to.least(1);",
													"});",
													"",
													"",
													"// вывод параметров в консоль",
													"console.log(\"object_id Комерческое строительство = \" + pm.environment.get(\"object_id\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"category.id\": 3\n            }\n        ],\n        \"search\": \"деревня Говорово,ул. Центральная\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/find",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Информация об объекте (longitude, latitude) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.environment.set(\"longitude\", jsonData.data.first().geo_point.coordinates[0]);\r",
													"pm.environment.set(\"latitude\", jsonData.data.first().geo_point.coordinates[1]);\r",
													"\r",
													"\r",
													"\r",
													"// вывод параметров в консоль\r",
													"console.log(\"longitude = \" + pm.environment.get(\"longitude\"));\r",
													"console.log(\"latitude = \" + pm.environment.get(\"latitude\"));\r",
													""
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"//pm.environment.set(\"object_id\", 123);",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"ids\": [{{object_id}}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pdo}}/facility/get",
											"host": [
												"{{pdo}}"
											],
											"path": [
												"facility",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "1016. Создать сообщение (issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"issue_id\", jsonData.data.id);",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}",
													"console.log(\"issue_id: \" + pm.environment.get(\"issue_id\")); "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", today);",
													"",
													"pm.environment.set (\"ROIV\", false);",
													"pm.environment.set (\"OIV\", true);",
													"pm.environment.set (\"UOIV\", false);",
													"pm.environment.set (\"RKO\", true);",
													"pm.environment.set (\"KO\", true);",
													"pm.environment.set (\"UKO\", true);",
													"pm.environment.set (\"ARBITOR\", true);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"user\": {\r\n        \"ssoid\": \"{{ssoid}}\"\r\n    },\r\n    \"attrs\": [\r\n        {\r\n            \"issue_attribute_code\": \"object_id\",\r\n            \"value\": {{object_id}}\r\n        },\r\n        {\r\n            \"issue_attribute_code\": \"latitude\",\r\n            \"value\": \"{{latitude}}\"\r\n        },\r\n        {\r\n            \"issue_attribute_code\": \"longitude\",\r\n            \"value\": \"{{longitude}}\"\r\n        }\r\n\r\n    ],\r\n        \"attachments\": [\r\n        {\r\n            \"file_id\": {{file_id}}\r\n        },\r\n        {\r\n            \"file_id\": {{file_id2}}\r\n        }\r\n    ],    \r\n    \"theme_id\": {{theme_id}},\r\n    \"text\": \"{{message_text}}\",\r\n    \"labels\":[{\"issue_label_code\":\"is_autotest_bad\"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/add",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"add"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "03. Модератор публикация собщения (без изменений) с хештегом (другое))",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация сообщения без изменений",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    },\r\n    \"tags\": [\r\n    {\r\n      \"tag_id\": 10022,\r\n      \"tag_type_code\": \"hashtag-other\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "04. 1016 Похожее. Поврежденные | неправильно установленные дорожные знаки",
							"item": [
								{
									"name": "1016 Поврежденные | неправильно установленные дорожные знаки Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"theme_name\", jsonData.data.first().title);",
													"",
													"// вывод параметров в консоль",
													"console.log(\"theme_name = \" + pm.environment.get(\"theme_name\"));",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"theme_id\", 1016);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n        {{theme_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/theme/get?clear_cache=",
											"host": [
												"{{pos}}"
											],
											"path": [
												"theme",
												"get"
											],
											"query": [
												{
													"key": "clear_cache",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1016. Создать похожее сообщение (issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"issue_id_similar\", jsonData.data.id);",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}",
													"",
													"pm.test(\"Проверка создания похожего сообщения\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.id>0);",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"console.log(\"issue_id_similar: \" + pm.environment.get(\"issue_id_similar\")); "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var today = new Date(dateNow.setDate(dateNow.getDate() + 3/24)).toISOString().substr(0,19);",
													"postman.setEnvironmentVariable(\"today\", today);",
													"",
													"pm.environment.set (\"ROIV\", false);",
													"pm.environment.set (\"OIV\", true);",
													"pm.environment.set (\"UOIV\", false);",
													"pm.environment.set (\"RKO\", true);",
													"pm.environment.set (\"KO\", true);",
													"pm.environment.set (\"UKO\", true);",
													"pm.environment.set (\"ARBITOR\", true);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"user\": {\r\n        \"ssoid\": \"{{ssoid}}\"\r\n    },\r\n    \"attrs\": [\r\n        {\r\n            \"issue_attribute_code\": \"object_id\",\r\n            \"value\": {{object_id}}\r\n        },\r\n        {\r\n            \"issue_attribute_code\": \"latitude\",\r\n            \"value\": \"{{latitude}}\"\r\n        },\r\n        {\r\n            \"issue_attribute_code\": \"longitude\",\r\n            \"value\": \"{{longitude}}\"\r\n        }\r\n\r\n    ],\r\n        \"attachments\": [\r\n        {\r\n            \"file_id\": {{file_id}}\r\n        },\r\n        {\r\n            \"file_id\": {{file_id2}}\r\n        }\r\n    ],    \r\n    \"theme_id\": {{theme_id}},\r\n    \"text\": \"{{message_text}}\",\r\n    \"labels\":[{\"issue_label_code\":\"is_autotest_bad\"}]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/add",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"add"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "05. Модератор публикация Похожего собщения (без изменений) Copy",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id_similar\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code_similar\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id_similar\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id_similar\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id_similar\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id_similar}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация сообщения без изменений с хэштегом (другое)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка публикации похожего\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.id>0);\r",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id_similar}},\r\n    \"assignment_id\": {{assignment_id_similar}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    },\r\n    \"primaries\": [\r\n    {\r\n        \"primary_issue_id\": {{issue_id}}, \r\n        \"type_code\": \"similar\"\r\n    }\r\n],\r\n\"tags\": [\r\n{\r\n\"tag_id\": 10022,\r\n\"tag_type_code\": \"hashtag-other\"\r\n}\r\n]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "06. РОИВ: перенаправить арбитру",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; assignment_role_code; assignment_role_code; issue_id; organization_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {",
													"    ",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"    pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);",
													"    pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"    pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"",
													"}catch(e){pm.test(\"Ошибка\", () => {throw new Error(e.message)});}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function(){}, 500);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск: пользователя по организации (user_oiv_id, author_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            {\n                \"blocked_at\": null\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "РОИВ: Направить арбитру",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"require_redirect\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"note_referee\",\r\n                \"value\": \"Текст комментария для арбитра Postmen {{$isoTimestamp}}\"\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "07. Арбитр: Назначить ОИВ по 1006 орг.ид",
							"item": [
								{
									"name": "1. Матрица+Информация по сообщению (assigment_id; assignment_role_code; comment_id; issue_id; matrix_id, organization_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);",
													"",
													"",
													"pm.environment.set(\"matrix_id\", jsonData.data.first().theme.matrix.first().matrix_id);//  матрица ",
													"",
													"// вывод параметров в консоль",
													"console.log(\"matrix_id = \" + pm.environment.get(\"matrix_id\"));",
													"console.log(\"assignment_id = \" + pm.environment.get(\"assignment_id\"));",
													"console.log(\"assignment_role_code = \" + pm.environment.get(\"assignment_role_code\"));",
													"console.log(\"comment_id = \" + pm.environment.get(\"comment_id\"));",
													"console.log(\"issue_id = \" + pm.environment.get(\"issue_id\"));",
													"console.log(\"organization_id = \" + pm.environment.get(\"organization_id\"));"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ],\r\n    \"expand\": [\"theme.matrix\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по матрице (organization_group_of_oiv1_id; organization_of_oiv1_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"if (pm.environment.get(\"ARBITOR\")==true)\r",
													"{\r",
													"    // ищем первый ОИВ\r",
													"    const childrenOIV = jsonData.data.first().children.filter(item =>  item.role_code === \"oiv1\" );\r",
													"  \r",
													"    // проверяем что нашли в ОИВ1 группу или организацию, если организацию, то запоминаем id  организации\r",
													"    if (childrenOIV.first().organization != null)\r",
													"    {\r",
													"        pm.environment.set(\"organization_of_oiv1_id\", childrenOIV.first().organization.id);\r",
													"        pm.environment.set(\"organization_group_of_oiv1_id\",null );\r",
													"    }\r",
													"    //иначе запоминаем id группы\r",
													"    else\r",
													"    {\r",
													"        pm.environment.set(\"organization_group_of_oiv1_id\", childrenOIV.first().organization_group.id);\r",
													"        pm.environment.set(\"organization_of_oiv1_id\",null );\r",
													"    }\r",
													"\r",
													"     // вывод параметров в консоль\r",
													"     console.log(\"organization_of_oiv1_id = \" + pm.environment.get(\"organization_of_oiv1_id\"));\r",
													"}\r",
													"else\r",
													"{\r",
													"    pm.environment.set(\"organization_group_of_oiv1_id\",null );\r",
													"}\r",
													"    // вывод параметров в консоль\r",
													"    console.log(\"organization_group_of_oiv1_id = \" + pm.environment.get(\"organization_group_of_oiv1_id\"));\r",
													"    "
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{matrix_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/matrix/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"matrix",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск организаций по группе (organization_of_oiv1_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"try {\r",
													"        if (pm.environment.get(\"ARBITOR\")==true)\r",
													"        {\r",
													"            if (pm.environment.get(\"organization_group_of_oiv1_id\")!= null)\r",
													"            {\r",
													"                pm.environment.set(\"organization_of_oiv1_id\", jsonData.data.items[1]); //запоминаем id организации               \r",
													"            }\r",
													"        }\r",
													"        else{\r",
													"            pm.environment.set(\"organization_of_oiv1_id\", null);  \r",
													"            }        \r",
													"}catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}\r",
													"// вывод параметров в консоль\r",
													"console.log(\"organization_of_oiv1_id = \" + pm.environment.get(\"organization_of_oiv1_id\"));"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"filter\": {\r\n    \"condition\": {\r\n      \"group_sources.organization_group_id\": {{organization_group_of_oiv1_id}}\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/organization/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"organization",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Поиск: пользователя по организации Арбитр (user_oiv_id, author_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.id>0);",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200, 201]);",
													"});",
													"",
													"// вывод параметров в консоль",
													"console.log(\"author_id = \" + pm.environment.get(\"author_id\"));",
													"console.log(\"user_oiv_id = \" + pm.environment.get(\"user_oiv_id\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\":10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Арбитр: Назначить ОИВ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"try {",
													"        if (pm.environment.get(\"ARBITOR\")== false)",
													"        {",
													"            pm.test(\"Проверка на код 400\", function () ",
													"            {",
													"                //Проверяем общий код 400",
													"                pm.expect(pm.response.code).to.be.oneOf([400]);",
													"",
													"            });",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"assign_oiv\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"note\",\r\n                \"value\": \"Текст комментария от арбитра при назначении Postmen {{$isoTimestamp}}\"\r\n            },\r\n            {\r\n                \"action_attribute_code\": \"next_assignee\",\r\n                \"value\": 1006\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "08. ОИВ(-У): Обещание устранения",
							"item": [
								{
									"name": "1. Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);",
													"//var file_id2= pm.environment.get(\"file_id\");",
													"//file_id2 -=1;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\":10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. ОИВ: Обещание устранения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"try {\r",
													"        if (pm.environment.get(\"UOIV\")== true)\r",
													"        {\r",
													"            pm.test(\"Проверка на код 400\", function () \r",
													"            {\r",
													"                //Проверяем общий код 400\r",
													"                pm.expect(pm.response.code).to.be.oneOf([400]);\r",
													"\r",
													"            });\r",
													"        }\r",
													"}catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"",
													"try {",
													"        if (pm.environment.get(\"UOIV\")== true)",
													"        {",
													"            pm.environment.set(\"test_code_200\",false);",
													"            ",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"send_answer\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"answer_action\",\r\n                \"value_id\": 4\r\n            },\r\n            {\r\n                \"action_attribute_code\": \"date\",\r\n                \"value\": \"{{future-date}}\"\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"text\": \"Обещание устранения проблемы ОИВом {{$isoTimestamp}}\",\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "09. Модератор: публикация ответа (без изменений)",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация ответа без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка публикации ответа\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.id>0);\r",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "10. ОИВ(-У): Обещание не выполнено",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"like\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);",
													"//var file_id2= pm.environment.get(\"file_id\");",
													"//file_id2 -=1;"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            [\n                \"=\",\n \"files.ssoid\",\n                \"{{ssoid}}\"\n            ],\n            [\n                \"<=\", \"files.created_at\",       \n  \"{{files_created_1}}\"\n            ],\n            [\n                \">=\", \"files.created_at\",\n                \"{{files_created_2}}\"\n            ]\n        ]\n  },\n        \"limit\": 5\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "ОИВ: Обещание не выполнено",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"try {\r",
													"        if (pm.environment.get(\"UOIV\")== true)\r",
													"        {\r",
													"            pm.test(\"Проверка на код 400\", function () \r",
													"            {\r",
													"                //Проверяем общий код 400\r",
													"                pm.expect(pm.response.code).to.be.oneOf([400]);\r",
													"\r",
													"            });\r",
													"        }\r",
													"}catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 2)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"",
													"try {",
													"        if (pm.environment.get(\"UOIV\")== true)",
													"        {",
													"            pm.environment.set(\"test_code_200\",false);",
													"            ",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"send_answer\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"answer_action\",\r\n                \"value_id\": 3\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"text\": \"Обещание не выполнено Postmen {{$isoTimestamp}}\",\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "11. Модератор: публикация ответа (без изменений)",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация ответа без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка публикации ответа\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.id>0);\r",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "12. РКО назначить КО",
							"item": [
								{
									"name": "1. Матрица+Информация по сообщению (matrix_id, assignment_id, assignment_role_code, comment_id, issue_id, organization_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);",
													"pm.environment.set(\"matrix_id\", jsonData.data.first().theme.matrix.first().matrix_id);//  матрица ",
													"",
													"// вывод параметров в консоль",
													"console.log(\"matrix_id = \" + pm.environment.get(\"matrix_id\"));",
													"console.log(\"assignment_id = \" + pm.environment.get(\"assignment_id\"));",
													"console.log(\"assignment_role_code = \" + pm.environment.get(\"assignment_role_code\"));",
													"console.log(\"comment_id = \" + pm.environment.get(\"comment_id\"));",
													"console.log(\"issue_id = \" + pm.environment.get(\"issue_id\"));",
													"console.log(\"organization_id = \" + pm.environment.get(\"organization_id\"));"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ],\r\n    \"expand\": [\"theme.matrix\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Информация по матрице (organization_matrix_parent_id, organization_group_of_ko_id, organization_of_ko_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"if (pm.environment.get(\"RKO\")== true)\r",
													"{\r",
													"    //определяем id записи РКО в матрице, чтобы найти его детей\r",
													"    const parentКО = jsonData.data.first().children.filter(item =>  item.role_code === \"rko\");\r",
													"    pm.environment.set(\"organization_matrix_parent_id\", parentКО.first().id);\r",
													"\r",
													"    // ищем первый ОИВ1, который относится к РОИВ\r",
													"    const childrenКО = jsonData.data.first().children.filter(item =>  item.role_code === \"ko\" && item.parent_id === pm.environment.get(\"organization_matrix_parent_id\"));\r",
													"    \r",
													"    // проверяем что нашли в ОИВ1 группу или организацию, если организацию, то запоминуем id  организации \r",
													"    if (childrenКО.first().organization != null)\r",
													"    {\r",
													"        pm.environment.set(\"organization_of_ko_id\", childrenКО.first().organization.id);\r",
													"        pm.environment.set(\"organization_group_of_ko_id\",null );\r",
													"    }\r",
													"    //иначе запоминаем id группы\r",
													"    else\r",
													"    {\r",
													"        pm.environment.set(\"organization_group_of_ko_id\", childrenКО.first().organization_group.id);\r",
													"        pm.environment.set(\"organization_of_ko_id\",null );\r",
													"    }\r",
													"\r",
													"    // вывод параметров в консоль\r",
													"    console.log(\"organization_matrix_parent_id = \" + pm.environment.get(\"organization_matrix_parent_id\"));   \r",
													"    console.log(\"organization_of_ko_id = \" + pm.environment.get(\"organization_of_ko_id\"));\r",
													"} \r",
													"else\r",
													"{\r",
													"    pm.environment.set(\"organization_group_of_ko_id\",null );\r",
													"}\r",
													"\r",
													"console.log(\"organization_group_of_ko_id = \" + pm.environment.get(\"organization_group_of_ko_id\"));"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{matrix_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/matrix/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"matrix",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск организаций по группе (organization_of_ko_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"try {\r",
													"    if (pm.environment.get(\"RKO\")==true)\r",
													"    {\r",
													"        if (pm.environment.get(\"organization_group_of_ko_id\")!= null)\r",
													"        {\r",
													"            pm.environment.set(\"organization_of_ko_id\", jsonData.data.items[1]); //запоминаем id организации\r",
													"        }\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        pm.environment.set(\"organization_of_ko_id\", null);  \r",
													"    }\r",
													"}\r",
													"catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}\r",
													"\r",
													"// вывод параметров в консоль\r",
													"console.log(\"organization_of_ko_id = \" + pm.environment.get(\"organization_of_ko_id\"));\r",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											},
											{
												"key": "debug-enabled",
												"value": "1",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"filter\": {\r\n    \"condition\": {\r\n      \"group_sources.organization_group_id\": {{organization_group_of_ko_id}}\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/organization/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"organization",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Поиск: пользователя по организации РКО (author_id, user_ko_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_ko_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});",
													"",
													"// вывод параметров в консоль",
													"console.log(\"author_id = \" + pm.environment.get(\"author_id\"));",
													"console.log(\"user_ko_id = \" + pm.environment.get(\"user_ko_id\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\":10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "6. РКО: Назначить КО",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"try {",
													"        if (pm.environment.get(\"RKO\")== false)",
													"        {",
													"            pm.environment.set(\"test_code_200\",false);",
													"            ",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"assign\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"next_assignee\",\r\n                \"value\": 8036\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_ko_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "13. КО(+У): Обещание устранения",
							"item": [
								{
									"name": "1. Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\":10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4.КО к УКО: Обещание устранения",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 3)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"",
													"",
													"",
													"try {",
													"        if (pm.environment.get(\"UKO\")== true)",
													"        {",
													"            pm.environment.set(\"test_code_200\",true);",
													"            ",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"send_answer_approve\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"answer_action\",\r\n                \"value_id\": 4\r\n            },\r\n            {\r\n                \"action_attribute_code\": \"date\",\r\n                \"value\": \"{{future-date}}\"\r\n            },\r\n            {\r\n                \"action_attribute_code\": \"note_approving_or_editor\",\r\n                \"value\": \"Уведомление для утверждающего\"\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"text\": \"Обещание устранения проблемы КО {{$isoTimestamp}}\",\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "14. УКО утвердил",
							"item": [
								{
									"name": "1. Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. УКО: Утвердить ответ без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  \r",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);\r",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"try {\r",
													"        if (pm.environment.get(\"UKO\")== true)\r",
													"        {\r",
													"            pm.environment.set(\"test_code_200\",true);\r",
													"            \r",
													"        }\r",
													"}catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"affirm\"\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "15. Модератор: публикация ответа (без изменений)",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация ответа без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка публикации ответа\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.id>0);\r",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "16. КО(+У): Проблема устранена",
							"item": [
								{
									"name": "1. Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Поиск: Файла (file_id, file_id2)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"file_id\", jsonData.data.items[0]);",
													"pm.environment.set(\"file_id2\", jsonData.data.items[1]);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sort\": {\n        \"id\": \"desc\"\n    },\n    \"limit\":10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{media}}/bunch/find",
											"host": [
												"{{media}}"
											],
											"path": [
												"bunch",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. КО к УКО: Проблема устранена",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  ",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 2)).toISOString().substr(0,10);",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);",
													"",
													"",
													"",
													"",
													"try {",
													"        if (pm.environment.get(\"UKO\")== true)",
													"        {",
													"            pm.environment.set(\"test_code_200\",true);",
													"            ",
													"        }",
													"}catch(e){",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); ",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"value": "developer",
												"type": "text"
											},
											{
												"key": "system-password",
												"value": "demo",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"send_answer_approve\",\r\n        \"attrs\": [\r\n            {\r\n                \"action_attribute_code\": \"answer_action\",\r\n                \"value_id\": 5\r\n            },\r\n            {\r\n                \"action_attribute_code\": \"note_approving_or_editor\",\r\n                \"value\": \"Уведомление для утверждающего\"\r\n            }\r\n        ]\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    },\r\n    \"comments\": [\r\n        {\r\n            \"text\": \"Проблема устранена КО {{$isoTimestamp}}\",\r\n            \"attachments\": [\r\n                {\r\n                    \"file_id\": {{file_id}}\r\n                },\r\n                {\r\n                    \"file_id\": {{file_id2}}\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "17. УКО утвердил",
							"item": [
								{
									"name": "1. Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Поиск: пользователя по организации (user_oiv_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"author_id\", jsonData.data.items.first());",
													"pm.environment.set(\"user_oiv_id\", jsonData.data.items.first());",
													"",
													"pm.test(\"Пользователь найден\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.data.items.first().length>0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filter\": {\n        \"condition\": [\n            \"and\",\n            {\n                \"organization_id\": {{organization_id}}\n            },\n            {\n                \"roles.role_code\": \"{{assignment_role_code}}\"\n            },\n            [\n                \"=\", \"source_code\", \"int_test\"\n            ],\n            [\n                \"is\", \"blocked_at\", null\n            ]\n        ]\n    },\n    \"sort\": {\n        \"user.created_at\": \"asc\"\n    },\n    \"limit\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/user/find",
											"host": [
												"{{pos}}"
											],
											"path": [
												"user",
												"find"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. УКО: Утвердить ответ без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var dateNow = new Date();  \r",
													"var futureDate = new Date(dateNow.setDate(dateNow.getDate() + 1)).toISOString().substr(0,10);\r",
													"postman.setEnvironmentVariable(\"future-date\", futureDate);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"try {\r",
													"        if (pm.environment.get(\"UKO\")== true)\r",
													"        {\r",
													"            pm.environment.set(\"test_code_200\",true);\r",
													"            \r",
													"        }\r",
													"}catch(e){\r",
													"    pm.test(\"Ошибка\", () => {throw new Error(e.message)}); \r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "pro15gorod",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"affirm\"\r\n    },\r\n    \"user\": {\r\n        \"id\": {{user_oiv_id}}\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "18. Модератор: публикация ответа (без изменений)",
							"item": [
								{
									"name": "Информация по сообщению (assigment_id; user_oiv_id; issue_id; issue_id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
													"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
													"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
													"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
													"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.environment.set (\"test_code_200\", true);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/get",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"get"
											]
										}
									},
									"response": []
								},
								{
									"name": "Модератор: Публикация ответа без изменений",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка публикации ответа\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.id>0);\r",
													"    pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "gorod",
													"type": "string"
												},
												{
													"key": "password",
													"value": "tCeC@TGg8MDE",
													"type": "string"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "system-name",
												"type": "text",
												"value": "developer"
											},
											{
												"key": "system-password",
												"type": "text",
												"value": "demo"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": {{issue_id}},\r\n    \"assignment_id\": {{assignment_id}},\r\n    \"action\": {\r\n        \"code\": \"publish\"\r\n    },\r\n    \"user\": {\r\n        \"id\": 99999999\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{pos}}/issue/update",
											"host": [
												"{{pos}}"
											],
											"path": [
												"issue",
												"update"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "label_request Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "gorod",
											"type": "string"
										},
										{
											"key": "password",
											"value": "tCeC@TGg8MDE",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"issue_id\": {{issue_id}},\r\n   \"labels\":[{\"issue_label_code\":\"{{label}}\"}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pos}}/issue/label/add",
									"host": [
										"{{pos}}"
									],
									"path": [
										"issue",
										"label",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Информация по сообщению expand",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"assignment_id\", jsonData.data.first().assignments.last().id);",
											"pm.environment.set(\"assignment_role_code\", jsonData.data.first().assignments.last().role_code);",
											"pm.environment.set(\"comment_id\", jsonData.data.first().comments.last().id);",
											"pm.environment.set(\"issue_id\", jsonData.data.first().id);",
											"pm.environment.set(\"organization_id\", jsonData.data.first().assignments.last().organization_id);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set (\"test_code_200\", true);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "gorod",
											"type": "string"
										},
										{
											"key": "password",
											"value": "tCeC@TGg8MDE",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [\r\n             {{issue_id}}\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{pos}}/issue/get",
									"host": [
										"{{pos}}"
									],
									"path": [
										"issue",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "/api/service/special/pos/button/problem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"similar_comment_id\", jsonData.data.problem_buttons.first().comment_id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "system-name",
										"type": "text",
										"value": "developer"
									},
									{
										"key": "system-password",
										"type": "text",
										"value": "demo"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"issue_ids\": [\n    {{issue_id_similar}}\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{gorod}}/api/service/special/pos/button/problem",
									"host": [
										"{{gorod}}"
									],
									"path": [
										"api",
										"service",
										"special",
										"pos",
										"button",
										"problem"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (Boolean(pm.environment.get(\"fail_034\"))){",
									"    pm.test.skip(\"Ошибка в цепочке тестов\");",
									"}",
									"else if (Boolean(pm.environment.get(\"fail_034\"))==false) {",
									"    pm.environment.unset(\"label\", \"is_autotest_bad\");",
									"    pm.environment.set(\"label\", \"is_autotest_ok\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"try {",
									"    if (pm.environment.get(\"test_code_200\")!=false)",
									"        {",
									"           ",
									"                //Проверяем общий код 200",
									"                pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);",
									"            ",
									"                //Дополнительно проверяем на код 200 в JSON",
									"                if (pm.request.method == 'POST')",
									"                {",
									"                    var jsonData = pm.response.json();",
									"                    pm.expect(jsonData.code).to.be.oneOf([200,201]);",
									"                }",
									"            ",
									"        }",
									"} catch(e){",
									"       ",
									"    pm.environment.set(\"fail_034\", true);",
									"};"
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"function get_random(arr) {",
					"    var item = arr[Math.floor(Math.random() * arr.length)];",
					"    return item;",
					"}",
					"",
					"var message_text = 'Тестовое сообщение, не брать в работу. После завершения работ сообщение будет удалено автоматически.';",
					"console.log(message_text);",
					"pm.environment.set(\"message_text\", message_text);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"try {",
					"    if (pm.environment.get(\"test_code_200\")!=false)",
					"        ",
					"        ",
					"        {",
					"            pm.test(\"Проверка на код 200\", function (){",
					"                //Проверяем общий код 200",
					"                pm.expect(pm.response.code, \"Current response code: \" + pm.response.code).to.be.oneOf([200,201]);",
					"                pm.test(pm.response.json().message);",
					"            pm.environment.set(\"label\", \"is_autotest_bad\")",
					"                //Дополнительно проверяем на код 200 в JSON",
					"                if (pm.request.method == 'POST')",
					"                {",
					"                    var jsonData = pm.response.json();",
					"                    pm.expect(jsonData.code).to.be.oneOf([200,201]);",
					"                }",
					"        });",
					"        }",
					"} catch(e){",
					"      ",
					"};",
					"if (pm.response.code != 200 && pm.response.json().error_code != 11008) {",
					"    pm.test(\"message: \" + pm.response.json().message, () =>{throw new Error(\"error_code: \" + pm.response.json().error_code)});",
					"}"
				]
			}
		}
	]
}